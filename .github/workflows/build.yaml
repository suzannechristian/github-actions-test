name: Build Pipeline

on:
  workflow_dispatch: {}
  push:
    branches:
      - 'master'

env:
  TAG_PREFIX: service-v
  TIMESTAMP: $(date +'%Y-%m-%dT%H-%M-%S')

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            fetch-depth: 0

      - name: version
        id: version-id
        uses: paulhatch/semantic-version@v5.3.0
        with:
          major_pattern: "(major)"
          minor_pattern: "(feat)"
          change_path: "service"
          version_format: "${major}.${minor}.${patch}"
          bump_each_commit: true
          tag_prefix: ${{ env.TAG_PREFIX }}

      - name: Print version
        run: |
          echo ${{ steps.version-id.outputs.version }}
          echo ${{ env.TIMESTAMP }}

      - name: Check if tag exists
        uses: mukunku/tag-exists-action@v1.4.0
        id: checkTag
        with:
          tag: service-v${{ steps.version-id.outputs.version }}

      - name: Update Readme and create artifact
        run: |
          echo testing_service_${{ steps.version-id.outputs.version }} >> service/README.txt
          echo testing_helm_${{ steps.version-id.outputs.version }} >> helm/README.txt
          cat service/README.txt
          cat helm/README.txt
          zip -r artifacts_${{ steps.version-id.outputs.version }}_$timestamp.zip */

      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(service-v${{ steps.version-id.outputs.version }}, 'refs/tags/')
        with:
          files: artifacts_${{ steps.version-id.outputs.version }}.zip
          tag_name: ${{ env.TAG_PREFIX }}${{ steps.version-id.outputs.version }}
#        with:
#          tag_name: ${{ env.TAG_PREFIX }}${{ steps.version-id.outputs.version }}
##          release_name: ${{ env.TAG_PREFIX }}${{ steps.version-id.outputs.version }}
#          draft: false
#          prerelease: false


#      - name: Get the upload URL for relase
#        run: |
#          echo ${{ steps.create_release.outputs.upload_url }}
#
#      - name: Create artifact and upload to release
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./artifacts_${{ steps.version-id.outputs.version }}.zip
#          asset_name: artifacts_${{ steps.version-id.outputs.version }}.zip
#          asset_content_type: application/zip
